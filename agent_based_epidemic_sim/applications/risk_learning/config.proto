// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package abesim;

import "agent_based_epidemic_sim/agent_synthesis/population_profile.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

// Configures a TracingPolicy that defines test, trace, and isolation
// parameters.
message TracingPolicyProto {
  // The duration for which test results are valid (e.g., a negative).
  // May serve as a buffering between test requests.
  google.protobuf.Duration test_validity_duration = 1;
  // The duration to retain contacts.
  google.protobuf.Duration contact_retention_duration = 2;
  // The duration to remain quarantined following the latest positive contact.
  google.protobuf.Duration quarantine_duration = 3;
  // The latency in receiving a test result.
  // May be generalized in the future to account for randomness, different test
  // types.
  google.protobuf.Duration test_latency = 4;
  // The (inclusive) threshold above which a test is presumed positive.
  float positive_threshold = 5;
}

message RiskLearningSimulationConfig {
  string agent_file = 1;
  string location_file = 2;

  google.protobuf.Timestamp init_time = 20;
  google.protobuf.Duration step_size = 21;
  int32 steps = 22;

  TracingPolicyProto tracing_policy = 100;
  repeated PopulationProfile profiles = 101;
}
